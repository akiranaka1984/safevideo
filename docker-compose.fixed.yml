version: '3.8'

services:
  client:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./src:/app/src
      - ./public:/app/public
    environment:
      - REACT_APP_API_URL=http://167.172.92.88:5000/api
      - REACT_APP_WS_URL=ws://167.172.92.88:5000/ws
      - NODE_ENV=production
      - GENERATE_SOURCEMAP=false
      - FAST_REFRESH=false
    restart: always
    depends_on:
      - server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=safevideo
      - DB_USER=safevideo_user
      - DB_PASSWORD=your_strong_password
      - JWT_SECRET=your_secure_jwt_secret_key
      - PORT=5000
      - NODE_ENV=production
      - CORS_ORIGIN=http://167.172.92.88
      - WS_ENABLED=true
      - WS_PORT=5000
      - WS_PATH=/ws
    restart: always
    depends_on:
      - mysql
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_strong_password
      - MYSQL_DATABASE=safevideo
      - MYSQL_USER=safevideo_user
      - MYSQL_PASSWORD=your_strong_password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=root_strong_password
    ports:
      - "8080:80"
    depends_on:
      - mysql

  nginx:
    image: nginx:alpine
    container_name: safevideo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - server
    restart: always

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  mysql-data:
    driver: local