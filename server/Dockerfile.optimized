# ==========================================
# Multi-stage build for SafeVideo Server
# ==========================================

# Stage 1: Dependencies
FROM node:16-alpine AS dependencies
WORKDIR /app
# Copy package files
COPY package*.json ./
# Install production dependencies only
RUN npm ci --only=production && \
    npm cache clean --force

# Stage 2: Development dependencies (for building if needed)
FROM node:16-alpine AS dev-dependencies
WORKDIR /app
COPY package*.json ./
RUN npm ci && \
    npm cache clean --force

# Stage 3: Production
FROM node:16-alpine AS production
# Install tini for proper signal handling and dumb-init as backup
RUN apk add --no-cache tini dumb-init

# Create app directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy dependencies from dependencies stage
COPY --from=dependencies --chown=nodejs:nodejs /app/node_modules ./node_modules

# Copy application code
COPY --chown=nodejs:nodejs . .

# Remove unnecessary files
RUN rm -rf .git \
           .env* \
           *.log \
           test/ \
           tests/ \
           .nyc_output \
           coverage/ \
           .github/ \
           .vscode/

# Create necessary directories
RUN mkdir -p logs uploads && \
    chown -R nodejs:nodejs logs uploads

# Set environment
ENV NODE_ENV=production

# Security: Use non-root user
USER nodejs

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); })"

# Use tini as entrypoint
ENTRYPOINT ["/sbin/tini", "--"]

# Start the application
CMD ["node", "server.js"]