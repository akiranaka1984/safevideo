# ==========================================
# Multi-stage build for SafeVideo Client
# ==========================================

# Stage 1: Dependencies
FROM node:16-alpine AS dependencies
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production && \
    npm cache clean --force

# Stage 2: Build
FROM node:16-alpine AS builder
WORKDIR /app
COPY package*.json ./
RUN npm ci && \
    npm cache clean --force
COPY . .
# Build arguments for environment-specific builds
ARG NODE_ENV=production
ARG REACT_APP_API_URL
ENV NODE_ENV=${NODE_ENV}
ENV REACT_APP_API_URL=${REACT_APP_API_URL}
RUN npm run build

# Stage 3: Production
FROM nginx:1.23-alpine AS production
# Install tini for proper signal handling
RUN apk add --no-cache tini

# Copy custom nginx configuration
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY nginx/security-headers.conf /etc/nginx/security-headers.conf

# Copy built application
COPY --from=builder /app/build /usr/share/nginx/html

# Create non-root user
RUN addgroup -g 1001 -S nginx && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /usr/share/nginx/html /etc/nginx /var/cache/nginx /var/run/nginx.pid

# Security: Remove unnecessary files
RUN rm -rf /usr/share/nginx/html/server \
           /usr/share/nginx/html/.git \
           /usr/share/nginx/html/.env* \
           /usr/share/nginx/html/node_modules

USER nginx
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget -q --spider http://localhost/ || exit 1

ENTRYPOINT ["/sbin/tini", "--"]
CMD ["nginx", "-g", "daemon off;"]