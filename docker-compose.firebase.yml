version: '3.8'

services:
  client:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}
        - REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}
        - REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_PROJECT_ID}
        - REACT_APP_FIREBASE_STORAGE_BUCKET=${REACT_APP_FIREBASE_STORAGE_BUCKET}
        - REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${REACT_APP_FIREBASE_MESSAGING_SENDER_ID}
        - REACT_APP_FIREBASE_APP_ID=${REACT_APP_FIREBASE_APP_ID}
    ports:
      - "80:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./src:/app/src
      - ./public:/app/public
    environment:
      - REACT_APP_API_URL=http://localhost:5002/api
      - NODE_ENV=production
      - REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}
      - REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}
      - REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_PROJECT_ID}
      - REACT_APP_FIREBASE_STORAGE_BUCKET=${REACT_APP_FIREBASE_STORAGE_BUCKET}
      - REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${REACT_APP_FIREBASE_MESSAGING_SENDER_ID}
      - REACT_APP_FIREBASE_APP_ID=${REACT_APP_FIREBASE_APP_ID}
    restart: always
    depends_on:
      - server
      - redis

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    ports:
      - "5002:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=safevideo
      - DB_USER=safevideo_user
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - PORT=5000
      - NODE_ENV=production
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SESSION_SECRET=${SESSION_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - FORCE_HTTPS=${FORCE_HTTPS}
      - SECURE_COOKIES=${SECURE_COOKIES}
      - ENABLE_HELMET=${ENABLE_HELMET}
      - ENABLE_CORS=${ENABLE_CORS}
      - ENABLE_RATE_LIMITING=${ENABLE_RATE_LIMITING}
      - ENABLE_CSRF_PROTECTION=${ENABLE_CSRF_PROTECTION}
    restart: always
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=safevideo
      - MYSQL_USER=safevideo_user
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./server/migrations:/docker-entrypoint-initdb.d:ro
    restart: always
    
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/security-headers.conf:/etc/nginx/security-headers.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - server
    restart: always

networks:
  default:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local